
CREATE DATABASE "HW3"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;


CREATE DOMAIN SCORE_DOMAIN AS INTEGER DEFAULT 0 CHECK (VALUE >= 0 AND VALUE <= 5);

CREATE TYPE RESIDENCE_TYPE_DOMAIN AS ENUM('APARTMENT','VILLA','HOTEL','ECOTOURISM');

CREATE TYPE CITY_TYPE AS ENUM('CITY','SUBURB');

CREATE DOMAIN AMENITIES_TYPE AS TEXT CHECK (VALUE IN ('KITCHENWARE', 'INTERNET','WASHING MACHINE')); --UPDATED LATER

CREATE DOMAIN NATIONAL_CODE_DOMAIN AS CHAR(10) CHECK (VALUE ~ '\d{10}');

CREATE DOMAIN PHONE_NUMBER AS CHAR(11) CHECK (VALUE ~ '[0][9]\d{9}');

CREATE TYPE TEXT_DIRECTION AS ENUM('TO GUEST','TO HOST');

CREATE TYPE RENT_REQUEST_STATUS AS ENUM ('Pending', 'Cancelled', 'Rejected', 'Accepted');

CREATE TYPE RENT_STATUS AS ENUM ('Cancelled', 'Completed', 'Ongoing');

CREATE TYPE ADDRESS_TYPE AS(
	HOUSE_UNIT INTEGER,
	HOUSE_NO INTEGER,
	STREET TEXT,
	NEIGHBOURHOOD TEXT
);

CREATE TYPE IMAGE_TYPE AS(
	IMAGE_NAME TEXT,
	IMAGE BYTEA
);

CREATE TYPE PERSONAL_INFO AS(
	FIRST_NAME TEXT,
	MIDDLE_NAME TEXT,
	LAST_NAME TEXT
);


-- tables:

CREATE TABLE HOST(
	NATIONAL_CODE NATIONAL_CODE_DOMAIN PRIMARY KEY,
	NATIONAL_CARD_PICTURE BYTEA NOT NULL,
	VERIFIED BOOLEAN NOT NULL DEFAULT FALSE,
	PERSONAL_INFORMATION PERSONAL_INFO NOT NULL
);


CREATE TABLE GUEST(
	NATIONAL_CODE NATIONAL_CODE_DOMAIN PRIMARY KEY,
	PHONE PHONE_NUMBER NOT NULL,
	PESONAL_INFORMATION PERSONAL_INFO NOT NULL
);



CREATE TABLE RESIDENCE(
	RESIDENCE_ID SERIAL,
	HOST_ID NATIONAL_CODE_DOMAIN NOT NULL,
	ARRIVAL_TIME TIME DEFAULT '12:00:00' NOT NULL,
	DEPARTURE_TIME TIME DEFAULT '11:00:00' NOT NULL,
	REPAIR_FEE_PER_RENT  DECIMAL (1000, 2) DEFAULT 0 NOT NULL,
	BASE_PRICE DECIMAL (1000, 2) DEFAULT 0 NOT NULL,
	MAX_CAPACITY INTEGER NOT NULL CHECK (MAX_CAPACITY > 0),
	NUMBER_OF_ROOMS INTEGER NOT NULL DEFAULT 0 CHECK (NUMBER_OF_ROOMS >= 0),
	AREA DECIMAL (1000) CHECK (AREA >= 0),
	RESIDENCE_TYPE RESIDENCE_TYPE_DOMAIN NOT NULL,
	ACCEPTED BOOLEAN DEFAULT FALSE NOT NULL,
	OWNERSHIP_DOCUMENT IMAGE_TYPE NOT NULL,
	
	FOREIGN KEY (HOST_ID) REFERENCES HOST(NATIONAL_CODE) ON DELETE SET NULL ON UPDATE CASCADE, --TODO CHECK
	PRIMARY KEY (RESIDENCE_ID)
);

CREATE TABLE NON_RENTABLE_PERIOD (
	"BEGIN" DATE,
	"END" DATE,
	RESIDENCE_ID INTEGER,
	FOREIGN KEY (RESIDENCE_ID) REFERENCES RESIDENCE(RESIDENCE_ID) ON DELETE CASCADE,
	PRIMARY KEY("BEGIN","END",RESIDENCE_ID)
);

CREATE TABLE DISCOUNTED_PERIOD (
	"BEGIN" DATE,
	"END" DATE,
	RESIDENCE_ID INTEGER,
	DISCOUNT_PERCENT DECIMAL(1000,2) NOT NULL CHECK(DISCOUNT_PERCENT > 0 AND DISCOUNT_PERCENT != 1),
	FOREIGN KEY (RESIDENCE_ID) REFERENCES RESIDENCE(RESIDENCE_ID) ON DELETE CASCADE,
	PRIMARY KEY("BEGIN","END",RESIDENCE_ID)
);

CREATE TABLE ADDRESS ( 	
	RESIDENCE_ID INTEGER,
	"LOCATION" POINT NOT NULL,
	"TYPE" CITY_TYPE NOT NULL,
	PROVINCE TEXT NOT NULL ,
	CITY TEXT NOT NULL ,
	FULL_ADDRES ADDRESS_TYPE NOT NULL 	,	
	FOREIGN KEY (RESIDENCE_ID) REFERENCES RESIDENCE(RESIDENCE_ID) ON DELETE CASCADE,
	PRIMARY KEY(RESIDENCE_ID)
);

CREATE TABLE AMENITIES(
	AMENITY AMENITIES_TYPE,
	RESIDENCE_ID INTEGER,
	"COMMENT" TEXT NOT NULL DEFAULT 'NO COMMENT',
	FOREIGN KEY (RESIDENCE_ID) REFERENCES RESIDENCE(RESIDENCE_ID) ON DELETE CASCADE,
	PRIMARY KEY(RESIDENCE_ID,AMENITY)
);

CREATE TABLE BEDS(
	RESIDENCE_ID INTEGER,
	CAPACITY INTEGER DEFAULT 1 NOT NULL,
	NUMBER_OF_BEDS INTEGER DEFAULT 1 NOT NULL,
	FOREIGN KEY (RESIDENCE_ID) REFERENCES RESIDENCE(RESIDENCE_ID) ON DELETE CASCADE,
	PRIMARY KEY (CAPACITY , RESIDENCE_ID)
);


CREATE TABLE PICTURES(
	IMAGE_ID SERIAL,
	IMAGE IMAGE_TYPE NOT NULL,
	RESIDENCE_ID INTEGER	,
	FOREIGN KEY (RESIDENCE_ID) REFERENCES RESIDENCE(RESIDENCE_ID) ON DELETE CASCADE,
	PRIMARY KEY (IMAGE_ID , RESIDENCE_ID)
);


CREATE TABLE CANCELLATION_POLICIES(
	"TYPE" TEXT ,
	PENALTY DECIMAL (1000, 2) DEFAULT 0 NOT NULL,
	"COMMENT" TEXT NOT NULL DEFAULT 'NO COMMENT',
	RESIDENCE_ID INTEGER,
	FOREIGN KEY (RESIDENCE_ID) REFERENCES RESIDENCE(RESIDENCE_ID) ON DELETE CASCADE,
	PRIMARY KEY ("TYPE" , RESIDENCE_ID)
);

CREATE TABLE RENT_REQUEST(
	START_DATE DATE,
	END_DATE DATE,
	PEOPLE_COUNT INTEGER NOT NULL CHECK (PEOPLE_COUNT > 0),
	REQUEST_STATUS  RENT_REQUEST_STATUS DEFAULT 'Pending' NOT NULL,
	GUEST_ID NATIONAL_CODE_DOMAIN,
	RID INTEGER,
	FOREIGN KEY (GUEST_ID) REFERENCES GUEST(NATIONAL_CODE)
		ON DELETE SET NULL, -- NULL KARDAM
	FOREIGN KEY (RID) REFERENCES RESIDENCE(RESIDENCE_ID)
		ON DELETE SET NULL, -- NULL KARDAM
	PRIMARY KEY (RID, GUEST_ID, START_DATE, END_DATE)
);

CREATE TABLE RENT(
	PRICE DECIMAL(1000, 2) DEFAULT 0 NOT NULL,
	"RENT_STATUS"  RENT_STATUS DEFAULT 'Ongoing' NOT NULL,
	CANCELATION_PENALTY DECIMAL (1000, 2)  ,
	START_DATE DATE,
	END_DATE DATE,
	GUEST_ID NATIONAL_CODE_DOMAIN,
	RID INTEGER,
	FOREIGN KEY (RID, GUEST_ID, START_DATE, END_DATE) REFERENCES RENT_REQUEST(RID, GUEST_ID, START_DATE, END_DATE)
		ON DELETE CASCADE,

	PRIMARY KEY (RID, GUEST_ID, START_DATE, END_DATE)
);

CREATE TABLE COMPLAINT(
	COMPLAINT_ID SERIAL,
	ACCEPTED BOOLEAN DEFAULT FALSE NOT NULL,
	EXPLANATION TEXT,
	START_DATE DATE,
	END_DATE DATE,
	GUEST_ID NATIONAL_CODE_DOMAIN,
	RID INTEGER,
	FOREIGN KEY (RID, GUEST_ID, START_DATE, END_DATE) REFERENCES RENT(RID, GUEST_ID, START_DATE, END_DATE)
		ON DELETE CASCADE, -- CASCADE KARDAM
	PRIMARY KEY (COMPLAINT_ID)
);

CREATE TABLE DAMAGE_REPORT(
	REPORT_ID SERIAL,
	ACCPETED BOOLEAN DEFAULT FALSE NOT NULL,
	EXPLANATION TEXT,
	PENALTY DECIMAL (1000, 2) DEFAULT 0,
	START_DATE DATE,
	END_DATE DATE,
	GUEST_ID NATIONAL_CODE_DOMAIN,
	RID INTEGER,
	UNIQUE (RID, GUEST_ID, START_DATE, END_DATE),
	FOREIGN KEY (RID, GUEST_ID, START_DATE, END_DATE) REFERENCES RENT(RID, GUEST_ID, START_DATE, END_DATE)
		ON DELETE CASCADE, -- CASCADE KARDAM
	PRIMARY KEY (REPORT_ID)
);



CREATE TABLE GUEST_COMMENT_ON_HOST(
	SCORE SCORE_DOMAIN NOT NULL,
	EXPLANATION TEXT,
	START_DATE DATE,
	END_DATE DATE,
	GUEST_ID NATIONAL_CODE_DOMAIN,
	RID INTEGER,
	FOREIGN KEY (RID, GUEST_ID, START_DATE, END_DATE) REFERENCES RENT(RID, GUEST_ID, START_DATE, END_DATE)
		ON DELETE CASCADE,
	PRIMARY KEY (RID, GUEST_ID, START_DATE, END_DATE)
);

CREATE TABLE HOST_COMMENT_ON_GUEST(
	EXPLANATION TEXT,
	START_DATE DATE,
	END_DATE DATE,
	GUEST_ID NATIONAL_CODE_DOMAIN,
	RID INTEGER,
	FOREIGN KEY (RID, GUEST_ID, START_DATE, END_DATE) REFERENCES RENT(RID, GUEST_ID, START_DATE, END_DATE)
		ON DELETE CASCADE,
	PRIMARY KEY (RID, GUEST_ID, START_DATE, END_DATE)
);
--------------------------------


CREATE TABLE MESSAGE(
	HOST_ID NATIONAL_CODE_DOMAIN REFERENCES HOST(NATIONAL_CODE)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	GUEST_ID NATIONAL_CODE_DOMAIN REFERENCES GUEST(NATIONAL_CODE)
		ON DELETE SET NULL
		ON UPDATE CASCADE,
	"ID" SERIAL NOT NULL,
	"TEXT" TEXT,
	"TIME" TIMESTAMP NOT NULL DEFAULT(CURRENT_TIMESTAMP),
	DIRECTION TEXT_DIRECTION NOT NULL,
	PRIMARY KEY("ID")
);

--PREREQUISITES
ALTER TABLE RESIDENCE ADD COLUMN "TITLE" TEXT NOT NULL;
ALTER DOMAIN AMENITIES_TYPE DROP CONSTRAINT AMENITIES_TYPE_CHECK;
ALTER DOMAIN AMENITIES_TYPE ADD CONSTRAINT AMENITIES_TYPE_CHECK CHECK (VALUE IN ('KITCHENWARE', 'INTERNET','WASHING MACHINE', 'PARKING'));
ALTER TABLE GUEST_COMMENT_ON_HOST ADD COLUMN SCORED_DATE DATE NOT NULL;


CREATE OR REPLACE FUNCTION host_guest_delete()
RETURNS TRIGGER AS $$
BEGIN
    DELETE FROM MESSAGE WHERE guest_id IS NULL AND host_id IS NULL;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_delete_guest_message
AFTER DELETE ON GUEST
EXECUTE PROCEDURE host_guest_delete();
CREATE TRIGGER trigger_delete_host_message
AFTER DELETE ON HOST
EXECUTE PROCEDURE host_guest_delete();


























